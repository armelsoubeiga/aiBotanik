#!/usr/bin/env python3
"""
Script pour forcer le basculement vers OpenAI et tester
"""

import os
import sys
from dotenv import load_dotenv

# Charger l'environnement
load_dotenv()

# Ajouter le r√©pertoire backend au path
sys.path.append(os.path.join(os.path.dirname(__file__)))

def force_switch_to_openai():
    """Force le basculement vers OpenAI"""
    print("=== Basculement forc√© vers OpenAI ===")
    
    try:
        # Importer les modules n√©cessaires
        from app import save_config, verify_openai_key, get_llm_module
        
        # V√©rifier que la cl√© OpenAI est valide
        openai_key = os.getenv("OPENAI_API_KEY")
        print(f"Cl√© OpenAI trouv√©e: {bool(openai_key)}")
        
        if openai_key:
            is_valid = verify_openai_key(openai_key)
            print(f"Cl√© OpenAI valide: {is_valid}")
            
            if is_valid:
                # Sauvegarder la configuration
                result = save_config({"llm_backend": "openai"})
                print(f"Configuration sauvegard√©e: {result}")
                
                # Recharger le module
                module = get_llm_module()
                print(f"Module charg√©: {module.__name__}")
                
                # Tester une g√©n√©ration simple
                if hasattr(module, 'generate_chat_response'):
                    print("Test de g√©n√©ration de chat...")
                    response = module.generate_chat_response("Bonjour")
                    print(f"R√©ponse re√ßue (longueur: {len(response)})")
                    print(f"D√©but: {response[:100]}...")
                    print("‚úÖ Chat OpenAI fonctionne")
                else:
                    print("‚ùå Fonction generate_chat_response non trouv√©e")
                
                return True
            else:
                print("‚ùå Cl√© OpenAI invalide")
                return False
        else:
            print("‚ùå Aucune cl√© OpenAI trouv√©e")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = force_switch_to_openai()
    if success:
        print("\nüéâ Basculement vers OpenAI r√©ussi !")
    else:
        print("\n‚ùå √âchec du basculement vers OpenAI")
